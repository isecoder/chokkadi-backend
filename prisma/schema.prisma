generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Roles {
  role_id   Int     @id @default(autoincrement())
  role_name String
  Users     Users[]
}

model Users {
  user_id          Int               @id @default(autoincrement())
  name             String
  email            String            @unique
  phone            String
  password         String?
  role_id          Int
  createdAt        DateTime          @default(now())
  auth_provider    String

  NewsUpdates      NewsUpdates[]
  Role             Roles             @relation(fields: [role_id], references: [role_id])

  CreatedImages    Images[]          @relation("createdByRelation")
  ModifiedImages   Images[]          @relation("modifiedByRelation")

  ManagedHallAvailability HallAvailability[] @relation("UserManagedAvailability")
}

model Images {
  image_id      Int       @id @default(autoincrement())
  alt_text      String?
  file_path     String
  created_by    Int       // Relation to Users
  created_at    DateTime  @default(now())
  modified_by   Int?      // Optional relation to Users
  modified_at   DateTime  @updatedAt

  createdBy     Users     @relation("createdByRelation", fields: [created_by], references: [user_id])
  modifiedBy    Users?    @relation("modifiedByRelation", fields: [modified_by], references: [user_id])

  Gallery       Gallery[]
  HallImages    HallImages[]
  NewsImages    NewsImages[]
}

model Gallery {
  gallery_id Int      @id @default(autoincrement())
  title      String
  image_id   Int
  Images     Images   @relation(fields: [image_id], references: [image_id])
}

model Halls {
  hall_id             Int            @id @default(autoincrement())
  name                String
  description         String
  name_kannada        String
  description_kannada String
  available           Boolean        @default(true) // General availability status

  hallForms           HallForm[]     @relation("HallForms")
  hallAvailability    HallAvailability[]
  HallImages          HallImages[]
}

model HallImages {
  id        Int     @id @default(autoincrement())
  hall_id   Int
  image_id  Int
  Halls     Halls   @relation(fields: [hall_id], references: [hall_id])
  Images    Images  @relation(fields: [image_id], references: [image_id])
}

model HallAvailability {
  id           Int      @id @default(autoincrement())
  hall_id      Int
  date         DateTime
  reason       String?  // Reason for unavailability
  is_booked    Boolean  @default(false) // Indicates if this is due to a booking or admin action
  createdBy    Int?     // Admin user ID (if manually marked)
  createdAt    DateTime @default(now())

  hall         Halls    @relation(fields: [hall_id], references: [hall_id])
  createdByUser Users?  @relation("UserManagedAvailability", fields: [createdBy], references: [user_id])
}

model Contacts {
  contact_id  Int    @id @default(autoincrement())
  name        String
  address     String
  city        String
  state       String
  postal_code String
  country     String
  phone       String
}

model NewsUpdates {
  news_id          Int      @id @default(autoincrement())
  title            String
  content          String
  title_kannada    String
  content_kannada  String
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  created_by       Int?
  User             Users?   @relation(fields: [created_by], references: [user_id])
  NewsImages       NewsImages[]
}

model NewsImages {
  id        Int     @id @default(autoincrement())
  news_id   Int
  image_id  Int
  NewsUpdates NewsUpdates @relation(fields: [news_id], references: [news_id])
  Images    Images  @relation(fields: [image_id], references: [image_id])
}

model HallForm {
  id                        Int       @id @default(autoincrement())
  name                      String
  reason                    String
  mobileNumber              String
  mobileNumberConfirmation  String
  date                      DateTime
  hallId                    Int
  paymentDetails            String?   // Optional field for payment details

  createdAt                 DateTime  @default(now())
  modifiedAt                DateTime? @updatedAt  // Temporarily nullable

  hall                      Halls     @relation("HallForms", fields: [hallId], references: [hall_id])
}


